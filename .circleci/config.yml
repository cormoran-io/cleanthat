version: 2.1 # use CircleCI 2.0

orbs:
  slack: circleci/slack@4.13.3
  #coveralls: coveralls/coveralls@2.0.0

aliases:
  - &exclude-deploy
    branches:
      ignore: /deploy-.*/
  - &include-deploy-prd
    branches:
      only: /deploy-prd/
  - &save_surefire
    # https://circleci.com/docs/2.0/collect-test-data/#maven-surefire-plugin-for-java-junit-results
    name: Save JUnit results
    # https://unix.stackexchange.com/questions/83593/copy-specific-file-type-keeping-the-folder-structure
    command: |
      mkdir -p ~/test-results/junit/
      find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp --parents {} ~/test-results/junit/ \;
      find . -type f -regex ".*/target/surefire-reports/.*txt" -exec cp --parents {} ~/test-results/junit/ \;
    when: always

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/cleanthat # directory where steps will run
    docker: # run the steps with Docker
      - image: cimg/openjdk:17.0.10

    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: circleci-cleanthat-{{ checksum "pom.xml" }}
      # Install all modules, especially cleanthat which is referred by spotless in cleanthat parent pom
      # 'install' vs 'package' as we need the 'java' module for the 'parent' formatting by spotless
      - run: mvn install -Pfast
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: circleci-cleanthat-{{ checksum "pom.xml" }}
      - run: mvn package # run the actual tests
      
      # This will enable quickly seeing failed tests in CircleCI GUI
      # https://circleci.com/docs/2.0/collect-test-data/
      - run: *save_surefire
      - store_test_results:
          path: ~/test-results/junit
      #- coveralls/upload
      
  spotless: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/cleanthat # directory where steps will run
    docker: # run the steps with Docker
      - image: cimg/openjdk:11.0.22

    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: circleci-cleanthat-{{ checksum "pom.xml" }}
      # Install all modules, especially cleanthat which is referred by spotless in cleanthat parent pom
      # 'install' vs 'package' as we need the 'java' module for the 'parent' formatting by spotless
      - run: mvn install -Pfast
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: circleci-cleanthat-{{ checksum "pom.xml" }}
      - run: mvn spotless:apply # run the actual tests
      
      # This will enable quickly seeing failed tests in CircleCI GUI
      # https://circleci.com/docs/2.0/collect-test-data/
      - run: *save_surefire
      - store_test_results:
          path: ~/test-results/junit
      #- coveralls/upload

  deploy-lambda: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/circleci-cleanthat # directory where steps will run
    docker: # run the steps with Docker
      - image: cimg/openjdk:11.0.22

    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: circleci-cleanthat-{{ checksum "pom.xml" }}
      - run: mvn clean install -pl :lambda -am -Pfast
      - run: mvn lambda:deploy-lambda -pl :lambda

workflows:
  build_and_test:
    jobs:
      - build:
          filters: *exclude-deploy
  build_and_deploy:
    jobs:
      # We might require a manual click in CircleCI UI: https://circleci.com/docs/2.0/workflows/#holding-a-workflow-for-a-manual-approval
      - build:
          context: 
            - slack-secrets
            #- cleanthat-coveralls
      - spotless:
          context: 
            - slack-secrets
            #- cleanthat-coveralls
      - deploy-lambda:
          # https://ideas.circleci.com/cloud-feature-requests/p/multiple-contexts-in-a-workflow
          context: aws-cleanthat
          filters: *include-deploy-prd