<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.github.cormoran-io.cleanthat</groupId>
		<version>1.0-SNAPSHOT</version>
		<artifactId>aggregator-cleanthat</artifactId>
	</parent>

	<artifactId>runnable</artifactId>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- https://docs.sentry.io/platforms/java/guides/spring-boot/ -->
		<dependency>
			<groupId>io.sentry</groupId>
			<artifactId>sentry-spring-boot-starter</artifactId>
			<version>4.3.0</version>
		</dependency>
		<dependency>
			<groupId>io.sentry</groupId>
			<artifactId>sentry-logback</artifactId>
			<version>5.0.1</version>
		</dependency>

		<dependency>
			<!-- https://stackoverflow.com/questions/1829904/is-there-a-way-to-ignore-a-single-findbugs-warning -->
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>annotations</artifactId>
			<version>3.0.1u2</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.github.cormoran-io.cleanthat</groupId>
			<artifactId>github</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.cormoran-io.cleanthat</groupId>
			<artifactId>java</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<!-- https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-java-aop-spring.html -->
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-xray-recorder-sdk-spring</artifactId>
			<version>2.9.0</version>
		</dependency>

		<dependency>
			<!-- https://cloud.spring.io/spring-cloud-static/spring-cloud-function/2.1.1.RELEASE/spring-cloud-function.html#_comparing_functional_with_traditional_bean_definitions -->
			<!-- It seems we need this to open an actual HTTP server for the Function -->
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-function-web</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- @WithMockUser -->
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
